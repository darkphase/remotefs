Resolver utility for remotefs:
------------------------------

Remotefs is a fast remote file system which work well on
device as Home NAS server or Home router with an interface
for external USB drive.

Remotefs transmit the name of the user and group and id the
names transmitetd by the server are known on the client, there
are displayed correctly on the client.

This mean that the files /etc/passwd and /etc/group have to
contain all name present on noth systems (client and server)
On some case this is not possible or the user is not able to
synchronize both client and server.

Rfs_nss try to "repair" such inconsistents.

Rfs_nss consist od a module libnss_rfs.so.2 or nss_rfs.so.1
according to the target OS and a server which store the
unknown user and group ans provide a uid/gid form them so
that tools as ls, getfacl and so on are able to resolve the
ownership for the object of the mounted file system.

Rfs_nss must get knowledge from the foreign name and offer
some possiblities,
1) There is no supplemental service or programs involved,
   if rfs (the remotefs client) ask for uid/gid correspoding
   to an user or group name, the name is tahem from rfs_nss
   and the uid/gid is automatically generated.
2) The name are stored within the file ~/.rfs_nss and are
   loaded at the start of rfs_nss so that the name contained
   within this file can be resolved.
3) Before of starting rfs, the program rfs_nss_get must be
   started. If the server rfs_nss_rem is working on the
   remotefs server, the name of all user and group are
   send to rfs_nss and the name send by rfsd can then been
   resolved by rfs.

Rfs_nss is particular usefull if the user share data on
an common directory and the acces to the files and directories
is governed by POSIX ACL.

Note that the recommande way is to have the /etc/passwd and
/etc/group files with the same user and groups. The uid/gid
must not be the same, rfs and rfsd transmit only names.


Configuration:
--------------

The file /etc/nsswitch.conf must be modified for this.
The lines beginning with passwd: or group: must contain as
last word "rfs".

example:
--------
passwd:     files winbind rfs
shadow:     files winbind 
group:      files winbind rfs

It is important that rfs is the last entry within these lines.


Supported Operating systems:
----------------------------

At this time Linux, FreeBSD and openSolaris are supported. rfs_nss and
the library are only use full if the exported remotefs file system
tell the clients the real name of the users (ugo mode, see the rfsd
man page).
You will also be able to set ACL on Linux systems, for other OS
the FUSE implementation don't this support well.
On Darwin/ Mac OS X, the POSIX ACL are not implemented, instead Darwin
has extented attributes which are similar to those from Windows or
openSolaris ACE (NFSv4 ACL).
Linux don't support NFSv4 ACL.

Installation and /etc/nsswitch.conf
-----------------------------------

Linux:
   copy the file libnss_rfs.so.2 to /lib
FreeBSD:
   copy the file nss_rfs.so.1 to /usr/local/bin

openSolaris:
   copy the file nss:rfs.so,1 to /usr/lib

openSolaris / Linux:
   add rfs a the line beginning with passwd eg. group

FreeBSD:
   The line "passwd: compat" and "group: compat" must be replaced
   with for example "passwd: files rfs". According to the FreeBSD
   man page, id compat is stated within the passwd or group line,
   no further libraries are allowed.

Compiling:
----------

In order to build the components for the client type:
make client; sudo -c make install

On the server type
make server; sudo -c make install

The generated file are:
  Client:
    - rfs_nss
    - libnss_rfs.so.2 or nss_rfs.so.1
    - rfs_nss_get

  Server:
    - rfs_nss_rem

You can also produce some other files for the client:
- rfs_nss_add
- rfs_nss_ctrl
which shall be used if the rfs_nss server read the user and group
name from a file (~/.rfs_nss or, id rfs_nss is started as root,
/var/rfs_nss/rfs_nss).
In order to pproduce and install them type:
make others; sudo -c make install
