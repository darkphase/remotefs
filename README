Resolver utility for remotefs:
------------------------------

This consist, according to the operating system, of a library
libnss_rfs.so.2 or nss_rfs.so.1 and a little server rfs_nss which
provide an uid or a gid for user or groups which are not known
on the workstation. The server can be started at boot time  or
on demand. For the last case a file rfs_nss_ctrl is provided,
it check if a server is already running and if the passed
argument is start and the server don't run start it. The server
will stop if rfs_nss_ctrl is called with the parameter stop and
if no more remotefs clients are running. 

The file /etc/nsswitch.conf must be modified for this.
The lines beginning with passwd: or group: must contain as
last word "rfs".

example:
--------
passwd:     files winbind rfs
shadow:     files winbind 
group:      files winbind rfs

It is important that rfs is the last entry within these lines.

How this work:
--------------

Remotefs transmit user and group name and not the uid and gid as
a regular file system. This is use full in order to map the owner
and group correctly.

If an application want to know the uid for the user bob the
function getpwnam() or getpwnam_r() is called ftom the application.
The resolver consult then the file /etc/nsswitch.conf and call
the corresponding functions for each of the given module until
the queried value was found,

The last module is rfs and we can be sure that the user was not
found. With this knowledge we can assign an unused uid for the
user name and return it.

The same occur for groups.

On further calls of the resolver module the informations
about the user or group are returned.

In order to have enough security the library and the server nss_rfs
communicate via an unix socket so that only local components
on the server can use them.

The uid and gid are calculated with a hash function and will begin
with 10000. With this approach, the chance that id´s will be,
regardless the order of the queries, the same is relatively high.

Please note that these components ts was developed for the use
within a small network as used into your home network.

Using these components will allow you to use systems with
not synchronized passwd and group files and to access the remote
files, modify them as far as the server (typically a NAS) know the
user and groups.

Test programs:
--------------

The program rfs_nss_test shall show if the name/id resolution work as
expected.

Supported Operating systems:
----------------------------
At this time Linux, FreeBSD and openSolaris are supported. rfs_nss and
the library are only use full if the exported remotefs file system
tell the clients the real name of the users (ugo mode, see the rfsd
man page).
You will also be able to set ACL on Linux systems, for other OS
the FUSE implementation don't this support well.
On Darwin/ Mac OS X, the POSIX ACL are not implemented, instead Darwin
has extented attributes which are similar to those from Windows or
openSolaris ACE (NFSv4 ACL).
Linux don't support NFSv4 ACL.

Installation and /etc/nsswitch.conf
-----------------------------------

Linux:
   copy the file libnss_rfs.so.2 to /lib
FreeBSD:
   copy the file nss_rfs.so.1 to /usr/local/bin

openSolaris:
   copy the file nss:rfs.so,1 to /usr/lib

openSolaris / Linux:
   add rfs a the line beginning with passwd eg. group

FreeBSD:
   The line "passwd: compat" and "group: compat" must be replaced
   with for example "passwd: files rfs". According to the FreeBSD
   man page, id compat is stated within the passwd or group line,
   no further libraries are allowed.
